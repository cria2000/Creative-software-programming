하나의 pthread_mutex_t를 공유하고 있기 때문에 하나가 lock이 걸리면 다른 하나는 접근할 수 없다.
또한 하나가 lock을 먼저 걸어버리면 lock을 또 걸 수 없고 unlock이 될 때까지 기다려야 한다. 
pthread_mutex_lock(&mutex);
while(state==STATE_B) usleep(10);
pthread_mutex_unlock(&mutex);
에서 lock을 해버리면 while문이 계속 돌며 state가 바뀌기를 기다리지만 다른 thread가 접근하여 state를 바꿔줄 수가 없기 때문에
계속해서 while문을 돌기 때문에 infinite loops가 생긴다. 
따라서 처음 시작했을 때 state=STATE_A상태이면 threadB에서 lock이 걸린 후 while문을 도는데, 
threadA에서 state를 STATE_B로 바꿔주려고 해도 lock이 걸린 상태이기 때문에 state를 바꿔줄 수 없고,
lock도 진행할 수 없이 unlock을 기다리고 있기 때문에
infinite loops가 생길 수 밖에 없다. 
